/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.MS3KG');
goog.provide('proto.MS3KG.App');
goog.provide('proto.MS3KG.App.Arpi');
goog.provide('proto.MS3KG.App.Arpi.Mode');
goog.provide('proto.MS3KG.App.Beat');
goog.provide('proto.MS3KG.App.Beat.Mode');
goog.provide('proto.MS3KG.App.Countdown');
goog.provide('proto.MS3KG.App.Countdown.Mode');
goog.provide('proto.MS3KG.App.Light');
goog.provide('proto.MS3KG.App.Light.Mode');
goog.provide('proto.MS3KG.App.MagicPov');
goog.provide('proto.MS3KG.App.Magnet');
goog.provide('proto.MS3KG.App.Magnet.Mode');
goog.provide('proto.MS3KG.App.Remote');
goog.provide('proto.MS3KG.App.Sequi');
goog.provide('proto.MS3KG.App.System');
goog.provide('proto.MS3KG.App.System.Mode');
goog.provide('proto.MS3KG.App.T');
goog.provide('proto.MS3KG.SysPref');
goog.provide('proto.MS3KG.SysPref.AP_INFO');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.MIDI_SEQUENCE');
goog.require('proto.RGB');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.displayName = 'proto.MS3KG';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.toObject = function(includeInstance, msg) {
  var f, obj = {
    applications: (f = msg.getApplications()) && proto.MS3KG.App.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG}
 */
proto.MS3KG.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG;
  return proto.MS3KG.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG}
 */
proto.MS3KG.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MS3KG.App;
      reader.readMessage(value,proto.MS3KG.App.deserializeBinaryFromReader);
      msg.setApplications(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplications();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.MS3KG.App.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.SysPref = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.SysPref, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.SysPref.displayName = 'proto.MS3KG.SysPref';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.SysPref.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.SysPref.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.SysPref} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.SysPref.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.SysPref}
 */
proto.MS3KG.SysPref.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.SysPref;
  return proto.MS3KG.SysPref.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.SysPref} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.SysPref}
 */
proto.MS3KG.SysPref.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.SysPref.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.SysPref.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.SysPref} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.SysPref.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.SysPref.AP_INFO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.SysPref.AP_INFO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.SysPref.AP_INFO.displayName = 'proto.MS3KG.SysPref.AP_INFO';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.SysPref.AP_INFO.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.SysPref.AP_INFO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.SysPref.AP_INFO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.SysPref.AP_INFO.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkname: jspb.Message.getField(msg, 1),
    password: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.SysPref.AP_INFO}
 */
proto.MS3KG.SysPref.AP_INFO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.SysPref.AP_INFO;
  return proto.MS3KG.SysPref.AP_INFO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.SysPref.AP_INFO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.SysPref.AP_INFO}
 */
proto.MS3KG.SysPref.AP_INFO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.SysPref.AP_INFO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.SysPref.AP_INFO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.SysPref.AP_INFO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.SysPref.AP_INFO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string networkName = 1;
 * @return {string}
 */
proto.MS3KG.SysPref.AP_INFO.prototype.getNetworkname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.MS3KG.SysPref.AP_INFO.prototype.setNetworkname = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.MS3KG.SysPref.AP_INFO.prototype.clearNetworkname = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.SysPref.AP_INFO.prototype.hasNetworkname = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.MS3KG.SysPref.AP_INFO.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.MS3KG.SysPref.AP_INFO.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.MS3KG.SysPref.AP_INFO.prototype.clearPassword = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.SysPref.AP_INFO.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.App = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.App, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.App.displayName = 'proto.MS3KG.App';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.App.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.App.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.App} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.toObject = function(includeInstance, msg) {
  var f, obj = {
    current: jspb.Message.getField(msg, 1),
    magicpov: (f = msg.getMagicpov()) && proto.MS3KG.App.MagicPov.toObject(includeInstance, f),
    light: (f = msg.getLight()) && proto.MS3KG.App.Light.toObject(includeInstance, f),
    magnet: (f = msg.getMagnet()) && proto.MS3KG.App.Magnet.toObject(includeInstance, f),
    system: (f = msg.getSystem()) && proto.MS3KG.App.System.toObject(includeInstance, f),
    remote: (f = msg.getRemote()) && proto.MS3KG.App.Remote.toObject(includeInstance, f),
    beat: (f = msg.getBeat()) && proto.MS3KG.App.Beat.toObject(includeInstance, f),
    countdown: (f = msg.getCountdown()) && proto.MS3KG.App.Countdown.toObject(includeInstance, f),
    arpi: (f = msg.getArpi()) && proto.MS3KG.App.Arpi.toObject(includeInstance, f),
    sequi: (f = msg.getSequi()) && proto.MS3KG.App.Sequi.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.App}
 */
proto.MS3KG.App.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.App;
  return proto.MS3KG.App.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.App} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.App}
 */
proto.MS3KG.App.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.MS3KG.App.T} */ (reader.readEnum());
      msg.setCurrent(value);
      break;
    case 2:
      var value = new proto.MS3KG.App.MagicPov;
      reader.readMessage(value,proto.MS3KG.App.MagicPov.deserializeBinaryFromReader);
      msg.setMagicpov(value);
      break;
    case 3:
      var value = new proto.MS3KG.App.Light;
      reader.readMessage(value,proto.MS3KG.App.Light.deserializeBinaryFromReader);
      msg.setLight(value);
      break;
    case 4:
      var value = new proto.MS3KG.App.Magnet;
      reader.readMessage(value,proto.MS3KG.App.Magnet.deserializeBinaryFromReader);
      msg.setMagnet(value);
      break;
    case 5:
      var value = new proto.MS3KG.App.System;
      reader.readMessage(value,proto.MS3KG.App.System.deserializeBinaryFromReader);
      msg.setSystem(value);
      break;
    case 6:
      var value = new proto.MS3KG.App.Remote;
      reader.readMessage(value,proto.MS3KG.App.Remote.deserializeBinaryFromReader);
      msg.setRemote(value);
      break;
    case 7:
      var value = new proto.MS3KG.App.Beat;
      reader.readMessage(value,proto.MS3KG.App.Beat.deserializeBinaryFromReader);
      msg.setBeat(value);
      break;
    case 8:
      var value = new proto.MS3KG.App.Countdown;
      reader.readMessage(value,proto.MS3KG.App.Countdown.deserializeBinaryFromReader);
      msg.setCountdown(value);
      break;
    case 9:
      var value = new proto.MS3KG.App.Arpi;
      reader.readMessage(value,proto.MS3KG.App.Arpi.deserializeBinaryFromReader);
      msg.setArpi(value);
      break;
    case 10:
      var value = new proto.MS3KG.App.Sequi;
      reader.readMessage(value,proto.MS3KG.App.Sequi.deserializeBinaryFromReader);
      msg.setSequi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.App.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.App.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.App} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.MS3KG.App.T} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMagicpov();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.MS3KG.App.MagicPov.serializeBinaryToWriter
    );
  }
  f = message.getLight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.MS3KG.App.Light.serializeBinaryToWriter
    );
  }
  f = message.getMagnet();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.MS3KG.App.Magnet.serializeBinaryToWriter
    );
  }
  f = message.getSystem();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.MS3KG.App.System.serializeBinaryToWriter
    );
  }
  f = message.getRemote();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.MS3KG.App.Remote.serializeBinaryToWriter
    );
  }
  f = message.getBeat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.MS3KG.App.Beat.serializeBinaryToWriter
    );
  }
  f = message.getCountdown();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.MS3KG.App.Countdown.serializeBinaryToWriter
    );
  }
  f = message.getArpi();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.MS3KG.App.Arpi.serializeBinaryToWriter
    );
  }
  f = message.getSequi();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.MS3KG.App.Sequi.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.MS3KG.App.T = {
  _MAGICPOV: 0,
  _LIGHT: 1,
  _MAGNET: 2,
  _SYSTEM: 3,
  _REMOTE: 4,
  _BEAT: 5,
  _COUNTDOWN: 6,
  _ARPI: 7,
  _SEQUI: 8
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.App.MagicPov = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.App.MagicPov, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.App.MagicPov.displayName = 'proto.MS3KG.App.MagicPov';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.App.MagicPov.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.App.MagicPov.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.App.MagicPov} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.MagicPov.toObject = function(includeInstance, msg) {
  var f, obj = {
    image: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.App.MagicPov}
 */
proto.MS3KG.App.MagicPov.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.App.MagicPov;
  return proto.MS3KG.App.MagicPov.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.App.MagicPov} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.App.MagicPov}
 */
proto.MS3KG.App.MagicPov.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.App.MagicPov.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.App.MagicPov.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.App.MagicPov} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.MagicPov.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string image = 1;
 * @return {string}
 */
proto.MS3KG.App.MagicPov.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.MS3KG.App.MagicPov.prototype.setImage = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.MS3KG.App.MagicPov.prototype.clearImage = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.MagicPov.prototype.hasImage = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.App.Light = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.App.Light, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.App.Light.displayName = 'proto.MS3KG.App.Light';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.App.Light.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.App.Light.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.App.Light} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Light.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    color: (f = msg.getColor()) && proto.RGB.toObject(includeInstance, f),
    colorindex: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.App.Light}
 */
proto.MS3KG.App.Light.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.App.Light;
  return proto.MS3KG.App.Light.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.App.Light} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.App.Light}
 */
proto.MS3KG.App.Light.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.MS3KG.App.Light.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 2:
      var value = new proto.RGB;
      reader.readMessage(value,proto.RGB.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColorindex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.App.Light.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.App.Light.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.App.Light} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Light.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.MS3KG.App.Light.Mode} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RGB.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.MS3KG.App.Light.Mode = {
  RAINBOW: 0,
  NORMAL: 1,
  SCANNER_RGB: 2,
  SCANNER_BW: 3
};

/**
 * optional Mode mode = 1;
 * @return {!proto.MS3KG.App.Light.Mode}
 */
proto.MS3KG.App.Light.prototype.getMode = function() {
  return /** @type {!proto.MS3KG.App.Light.Mode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.MS3KG.App.Light.Mode} value */
proto.MS3KG.App.Light.prototype.setMode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.MS3KG.App.Light.prototype.clearMode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.Light.prototype.hasMode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RGB color = 2;
 * @return {?proto.RGB}
 */
proto.MS3KG.App.Light.prototype.getColor = function() {
  return /** @type{?proto.RGB} */ (
    jspb.Message.getWrapperField(this, proto.RGB, 2));
};


/** @param {?proto.RGB|undefined} value */
proto.MS3KG.App.Light.prototype.setColor = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.MS3KG.App.Light.prototype.clearColor = function() {
  this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.Light.prototype.hasColor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 colorIndex = 3;
 * @return {number}
 */
proto.MS3KG.App.Light.prototype.getColorindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.MS3KG.App.Light.prototype.setColorindex = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.MS3KG.App.Light.prototype.clearColorindex = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.Light.prototype.hasColorindex = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.App.Magnet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.App.Magnet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.App.Magnet.displayName = 'proto.MS3KG.App.Magnet';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.App.Magnet.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.App.Magnet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.App.Magnet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Magnet.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.App.Magnet}
 */
proto.MS3KG.App.Magnet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.App.Magnet;
  return proto.MS3KG.App.Magnet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.App.Magnet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.App.Magnet}
 */
proto.MS3KG.App.Magnet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.MS3KG.App.Magnet.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.App.Magnet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.App.Magnet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.App.Magnet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Magnet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.MS3KG.App.Magnet.Mode} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.MS3KG.App.Magnet.Mode = {
  BARS: 0,
  BARS_DOT: 1,
  DOTS: 2,
  OTHER: 3
};

/**
 * optional Mode mode = 1;
 * @return {!proto.MS3KG.App.Magnet.Mode}
 */
proto.MS3KG.App.Magnet.prototype.getMode = function() {
  return /** @type {!proto.MS3KG.App.Magnet.Mode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.MS3KG.App.Magnet.Mode} value */
proto.MS3KG.App.Magnet.prototype.setMode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.MS3KG.App.Magnet.prototype.clearMode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.Magnet.prototype.hasMode = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.App.System = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.App.System, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.App.System.displayName = 'proto.MS3KG.App.System';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.App.System.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.App.System.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.App.System} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.System.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.App.System}
 */
proto.MS3KG.App.System.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.App.System;
  return proto.MS3KG.App.System.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.App.System} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.App.System}
 */
proto.MS3KG.App.System.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.MS3KG.App.System.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.App.System.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.App.System.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.App.System} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.System.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.MS3KG.App.System.Mode} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.MS3KG.App.System.Mode = {
  VERSION: 0,
  WIFI: 1,
  SSID: 2,
  IP: 3,
  SOFTIP: 4,
  POWER_LO: 5,
  POWER_HI: 6,
  POWER_VALUE: 7,
  CALIBRATION: 8
};

/**
 * optional Mode mode = 1;
 * @return {!proto.MS3KG.App.System.Mode}
 */
proto.MS3KG.App.System.prototype.getMode = function() {
  return /** @type {!proto.MS3KG.App.System.Mode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.MS3KG.App.System.Mode} value */
proto.MS3KG.App.System.prototype.setMode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.MS3KG.App.System.prototype.clearMode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.System.prototype.hasMode = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.App.Remote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.App.Remote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.App.Remote.displayName = 'proto.MS3KG.App.Remote';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.App.Remote.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.App.Remote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.App.Remote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Remote.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.App.Remote}
 */
proto.MS3KG.App.Remote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.App.Remote;
  return proto.MS3KG.App.Remote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.App.Remote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.App.Remote}
 */
proto.MS3KG.App.Remote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.App.Remote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.App.Remote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.App.Remote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Remote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.App.Beat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.App.Beat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.App.Beat.displayName = 'proto.MS3KG.App.Beat';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.App.Beat.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.App.Beat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.App.Beat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Beat.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sensitivity: jspb.Message.getFieldWithDefault(msg, 2, 2),
    color: (f = msg.getColor()) && proto.RGB.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.App.Beat}
 */
proto.MS3KG.App.Beat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.App.Beat;
  return proto.MS3KG.App.Beat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.App.Beat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.App.Beat}
 */
proto.MS3KG.App.Beat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.MS3KG.App.Beat.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSensitivity(value);
      break;
    case 3:
      var value = new proto.RGB;
      reader.readMessage(value,proto.RGB.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.App.Beat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.App.Beat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.App.Beat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Beat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.MS3KG.App.Beat.Mode} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.RGB.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.MS3KG.App.Beat.Mode = {
  SIDE: 0,
  CENTER: 1
};

/**
 * optional Mode mode = 1;
 * @return {!proto.MS3KG.App.Beat.Mode}
 */
proto.MS3KG.App.Beat.prototype.getMode = function() {
  return /** @type {!proto.MS3KG.App.Beat.Mode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.MS3KG.App.Beat.Mode} value */
proto.MS3KG.App.Beat.prototype.setMode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.MS3KG.App.Beat.prototype.clearMode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.Beat.prototype.hasMode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 sensitivity = 2;
 * @return {number}
 */
proto.MS3KG.App.Beat.prototype.getSensitivity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 2));
};


/** @param {number} value */
proto.MS3KG.App.Beat.prototype.setSensitivity = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.MS3KG.App.Beat.prototype.clearSensitivity = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.Beat.prototype.hasSensitivity = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RGB color = 3;
 * @return {?proto.RGB}
 */
proto.MS3KG.App.Beat.prototype.getColor = function() {
  return /** @type{?proto.RGB} */ (
    jspb.Message.getWrapperField(this, proto.RGB, 3));
};


/** @param {?proto.RGB|undefined} value */
proto.MS3KG.App.Beat.prototype.setColor = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.MS3KG.App.Beat.prototype.clearColor = function() {
  this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.Beat.prototype.hasColor = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.App.Countdown = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.App.Countdown, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.App.Countdown.displayName = 'proto.MS3KG.App.Countdown';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.App.Countdown.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.App.Countdown.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.App.Countdown} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Countdown.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.App.Countdown}
 */
proto.MS3KG.App.Countdown.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.App.Countdown;
  return proto.MS3KG.App.Countdown.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.App.Countdown} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.App.Countdown}
 */
proto.MS3KG.App.Countdown.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.MS3KG.App.Countdown.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.App.Countdown.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.App.Countdown.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.App.Countdown} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Countdown.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.MS3KG.App.Countdown.Mode} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.MS3KG.App.Countdown.Mode = {
  DOWN_1S: 0,
  DOWN_5S: 1,
  DOWN_10S: 2,
  DOWN_30S: 3,
  DOWN_1M: 4,
  DOWN_5M: 5,
  DOWN_10M: 6,
  DOWN_30M: 7
};

/**
 * optional Mode mode = 1;
 * @return {!proto.MS3KG.App.Countdown.Mode}
 */
proto.MS3KG.App.Countdown.prototype.getMode = function() {
  return /** @type {!proto.MS3KG.App.Countdown.Mode} */ (jspb.Message.getFieldWithDefault(this, 1, 4));
};


/** @param {!proto.MS3KG.App.Countdown.Mode} value */
proto.MS3KG.App.Countdown.prototype.setMode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.MS3KG.App.Countdown.prototype.clearMode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.Countdown.prototype.hasMode = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.App.Arpi = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.App.Arpi, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.App.Arpi.displayName = 'proto.MS3KG.App.Arpi';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.App.Arpi.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.App.Arpi.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.App.Arpi} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Arpi.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 7)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.App.Arpi}
 */
proto.MS3KG.App.Arpi.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.App.Arpi;
  return proto.MS3KG.App.Arpi.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.App.Arpi} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.App.Arpi}
 */
proto.MS3KG.App.Arpi.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.MS3KG.App.Arpi.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.App.Arpi.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.App.Arpi.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.App.Arpi} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Arpi.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.MS3KG.App.Arpi.Mode} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.MS3KG.App.Arpi.Mode = {
  ARP1: 0,
  ARP2: 1,
  ARP3: 2,
  ARP4: 3,
  ARP5: 4,
  ARP6: 5,
  ARP7: 6,
  ARP8: 7
};

/**
 * optional Mode mode = 1;
 * @return {!proto.MS3KG.App.Arpi.Mode}
 */
proto.MS3KG.App.Arpi.prototype.getMode = function() {
  return /** @type {!proto.MS3KG.App.Arpi.Mode} */ (jspb.Message.getFieldWithDefault(this, 1, 7));
};


/** @param {!proto.MS3KG.App.Arpi.Mode} value */
proto.MS3KG.App.Arpi.prototype.setMode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.MS3KG.App.Arpi.prototype.clearMode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.Arpi.prototype.hasMode = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MS3KG.App.Sequi = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MS3KG.App.Sequi, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MS3KG.App.Sequi.displayName = 'proto.MS3KG.App.Sequi';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MS3KG.App.Sequi.prototype.toObject = function(opt_includeInstance) {
  return proto.MS3KG.App.Sequi.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MS3KG.App.Sequi} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Sequi.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequence: (f = msg.getSequence()) && proto.MIDI_SEQUENCE.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MS3KG.App.Sequi}
 */
proto.MS3KG.App.Sequi.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MS3KG.App.Sequi;
  return proto.MS3KG.App.Sequi.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MS3KG.App.Sequi} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MS3KG.App.Sequi}
 */
proto.MS3KG.App.Sequi.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MIDI_SEQUENCE;
      reader.readMessage(value,proto.MIDI_SEQUENCE.deserializeBinaryFromReader);
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MS3KG.App.Sequi.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MS3KG.App.Sequi.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MS3KG.App.Sequi} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MS3KG.App.Sequi.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequence();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.MIDI_SEQUENCE.serializeBinaryToWriter
    );
  }
};


/**
 * optional MIDI_SEQUENCE sequence = 1;
 * @return {?proto.MIDI_SEQUENCE}
 */
proto.MS3KG.App.Sequi.prototype.getSequence = function() {
  return /** @type{?proto.MIDI_SEQUENCE} */ (
    jspb.Message.getWrapperField(this, proto.MIDI_SEQUENCE, 1));
};


/** @param {?proto.MIDI_SEQUENCE|undefined} value */
proto.MS3KG.App.Sequi.prototype.setSequence = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.MS3KG.App.Sequi.prototype.clearSequence = function() {
  this.setSequence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.Sequi.prototype.hasSequence = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional T current = 1;
 * @return {!proto.MS3KG.App.T}
 */
proto.MS3KG.App.prototype.getCurrent = function() {
  return /** @type {!proto.MS3KG.App.T} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.MS3KG.App.T} value */
proto.MS3KG.App.prototype.setCurrent = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.MS3KG.App.prototype.clearCurrent = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.prototype.hasCurrent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MagicPov magicPov = 2;
 * @return {?proto.MS3KG.App.MagicPov}
 */
proto.MS3KG.App.prototype.getMagicpov = function() {
  return /** @type{?proto.MS3KG.App.MagicPov} */ (
    jspb.Message.getWrapperField(this, proto.MS3KG.App.MagicPov, 2));
};


/** @param {?proto.MS3KG.App.MagicPov|undefined} value */
proto.MS3KG.App.prototype.setMagicpov = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.MS3KG.App.prototype.clearMagicpov = function() {
  this.setMagicpov(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.prototype.hasMagicpov = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Light light = 3;
 * @return {?proto.MS3KG.App.Light}
 */
proto.MS3KG.App.prototype.getLight = function() {
  return /** @type{?proto.MS3KG.App.Light} */ (
    jspb.Message.getWrapperField(this, proto.MS3KG.App.Light, 3));
};


/** @param {?proto.MS3KG.App.Light|undefined} value */
proto.MS3KG.App.prototype.setLight = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.MS3KG.App.prototype.clearLight = function() {
  this.setLight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.prototype.hasLight = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Magnet magnet = 4;
 * @return {?proto.MS3KG.App.Magnet}
 */
proto.MS3KG.App.prototype.getMagnet = function() {
  return /** @type{?proto.MS3KG.App.Magnet} */ (
    jspb.Message.getWrapperField(this, proto.MS3KG.App.Magnet, 4));
};


/** @param {?proto.MS3KG.App.Magnet|undefined} value */
proto.MS3KG.App.prototype.setMagnet = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.MS3KG.App.prototype.clearMagnet = function() {
  this.setMagnet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.prototype.hasMagnet = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional System system = 5;
 * @return {?proto.MS3KG.App.System}
 */
proto.MS3KG.App.prototype.getSystem = function() {
  return /** @type{?proto.MS3KG.App.System} */ (
    jspb.Message.getWrapperField(this, proto.MS3KG.App.System, 5));
};


/** @param {?proto.MS3KG.App.System|undefined} value */
proto.MS3KG.App.prototype.setSystem = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.MS3KG.App.prototype.clearSystem = function() {
  this.setSystem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.prototype.hasSystem = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Remote remote = 6;
 * @return {?proto.MS3KG.App.Remote}
 */
proto.MS3KG.App.prototype.getRemote = function() {
  return /** @type{?proto.MS3KG.App.Remote} */ (
    jspb.Message.getWrapperField(this, proto.MS3KG.App.Remote, 6));
};


/** @param {?proto.MS3KG.App.Remote|undefined} value */
proto.MS3KG.App.prototype.setRemote = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.MS3KG.App.prototype.clearRemote = function() {
  this.setRemote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.prototype.hasRemote = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Beat beat = 7;
 * @return {?proto.MS3KG.App.Beat}
 */
proto.MS3KG.App.prototype.getBeat = function() {
  return /** @type{?proto.MS3KG.App.Beat} */ (
    jspb.Message.getWrapperField(this, proto.MS3KG.App.Beat, 7));
};


/** @param {?proto.MS3KG.App.Beat|undefined} value */
proto.MS3KG.App.prototype.setBeat = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.MS3KG.App.prototype.clearBeat = function() {
  this.setBeat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.prototype.hasBeat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Countdown countdown = 8;
 * @return {?proto.MS3KG.App.Countdown}
 */
proto.MS3KG.App.prototype.getCountdown = function() {
  return /** @type{?proto.MS3KG.App.Countdown} */ (
    jspb.Message.getWrapperField(this, proto.MS3KG.App.Countdown, 8));
};


/** @param {?proto.MS3KG.App.Countdown|undefined} value */
proto.MS3KG.App.prototype.setCountdown = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.MS3KG.App.prototype.clearCountdown = function() {
  this.setCountdown(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.prototype.hasCountdown = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Arpi arpi = 9;
 * @return {?proto.MS3KG.App.Arpi}
 */
proto.MS3KG.App.prototype.getArpi = function() {
  return /** @type{?proto.MS3KG.App.Arpi} */ (
    jspb.Message.getWrapperField(this, proto.MS3KG.App.Arpi, 9));
};


/** @param {?proto.MS3KG.App.Arpi|undefined} value */
proto.MS3KG.App.prototype.setArpi = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.MS3KG.App.prototype.clearArpi = function() {
  this.setArpi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.prototype.hasArpi = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Sequi sequi = 10;
 * @return {?proto.MS3KG.App.Sequi}
 */
proto.MS3KG.App.prototype.getSequi = function() {
  return /** @type{?proto.MS3KG.App.Sequi} */ (
    jspb.Message.getWrapperField(this, proto.MS3KG.App.Sequi, 10));
};


/** @param {?proto.MS3KG.App.Sequi|undefined} value */
proto.MS3KG.App.prototype.setSequi = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.MS3KG.App.prototype.clearSequi = function() {
  this.setSequi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.App.prototype.hasSequi = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional App applications = 1;
 * @return {?proto.MS3KG.App}
 */
proto.MS3KG.prototype.getApplications = function() {
  return /** @type{?proto.MS3KG.App} */ (
    jspb.Message.getWrapperField(this, proto.MS3KG.App, 1));
};


/** @param {?proto.MS3KG.App|undefined} value */
proto.MS3KG.prototype.setApplications = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.MS3KG.prototype.clearApplications = function() {
  this.setApplications(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MS3KG.prototype.hasApplications = function() {
  return jspb.Message.getField(this, 1) != null;
};


